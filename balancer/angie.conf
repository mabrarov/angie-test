user  angie;
worker_processes  1;

error_log  /dev/stdout warn;
pid        /run/angie/angie.pid;

events {
    worker_connections  1024;
}

http {
    include prometheus_all.conf;

    upstream backend {
        zone   backend 1m;
        server backend:8080 resolve;
    }

    resolver 127.0.0.11 valid=10s status_zone=resolver;

    include       /etc/angie/mime.types;
    default_type  application/octet-stream;

    log_format main escape=json '{ "time": "$time_iso8601", "request_id": "$request_id", "user": "$remote_user", '
                                '"address": "$remote_addr", "connection_from": "$realip_remote_addr", '
                                '"bytes_received": $request_length, "bytes_sent": $bytes_sent, '
                                '"protocol": "$server_protocol", "scheme": "$scheme", "method": "$request_method", '
                                '"host": "$host", "path": "$uri", "request_query": "$args", '
                                '"referrer": "$http_referer", "user_agent": "$http_user_agent", '
                                '"request_time": $request_time, "status": $status, "content_type": "$content_type", '
                                '"vhost": "$server_name" }';

    log_format upstream escape=json '{ "time": "$time_iso8601", "request_id": "$request_id", "user": "$remote_user", '
                                    '"address": "$remote_addr", "connection_from": "$realip_remote_addr", '
                                    '"bytes_received": $request_length, "bytes_sent": $bytes_sent, '
                                    '"protocol": "$server_protocol", "scheme": "$scheme", "method": "$request_method", '
                                    '"host": "$host", "path": "$uri", "request_query": "$args", '
                                    '"referrer": "$http_referer", "user_agent": "$http_user_agent", '
                                    '"request_time": $request_time, "status": $status, '
                                    '"content_type": "$content_type", '
                                    '"upstream_response_time": "$upstream_response_time", '
                                    '"vhost": "$server_name", "upstream_addr": "$upstream_addr", '
                                    '"upstream_bytes_received": "$upstream_bytes_received", '
                                    '"upstream_response_time": "$upstream_response_time", '
                                    '"upstream_status": "$upstream_status", "forwarded": "$http_forwarded" }';

    access_log  /dev/stdout  main;

    sendfile        on;

    keepalive_timeout  60s;

    map $server_addr $proxy_forwarded_elem_by {
      # IPv4
      ~^[0-9.]+$        "by=$server_addr:$server_port";
      # IPv6
      ~^[0-9A-Fa-f:.]+$ "by=\"[$server_addr]:$server_port\"";
      default           "by=unknown";
    }
    map $realip_remote_addr $proxy_forwarded_elem_for {
      # IPv4
      ~^[0-9.]+$        "for=$realip_remote_addr:$realip_remote_port";
      # IPv6
      ~^[0-9A-Fa-f:.]+$ "for=\"[$realip_remote_addr]:$realip_remote_port\"";
      default           "for=unknown";
    }
    map $server_addr $proxy_forwarded_elem_host_server_addr {
      # IPv4
      ~^[0-9.]+$        "host=$server_addr:$server_port";
      # IPv6
      ~^[0-9A-Fa-f:.]+$ "host=[$server_addr]:$server_port";
    }
    map $http_host $proxy_forwarded_elem_host {
      ~^.+$             "host=$http_host";
      default           "$proxy_forwarded_elem_host_server_addr";
    }
    map $scheme $proxy_forwarded_elem_proto {
      ~^.+$             "proto=$scheme";
    }
    map $http_forwarded $proxy_add_forwarded {
      ~^.+$   "$http_forwarded, $proxy_forwarded_elem_by;$proxy_forwarded_elem_for;$proxy_forwarded_elem_host;$proxy_forwarded_elem_proto";
      default "$proxy_forwarded_elem_by;$proxy_forwarded_elem_for;$proxy_forwarded_elem_host;$proxy_forwarded_elem_proto";
    }

    server {
        listen       8080;
        server_name  application;
        status_zone  $host zone=host:10;
        access_log   /dev/stdout  upstream;
        location / {
            proxy_connect_timeout 10s;
            proxy_send_timeout    10s;
            proxy_read_timeout    10s;
            proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header      Forwarded $proxy_add_forwarded;
            proxy_pass            http://backend;
        }
    }

    server {
        listen       8081;
        server_name  management;
        location /metrics {
            prometheus all;
        }
        location /api/ {
            api /;
        }
    }
}
